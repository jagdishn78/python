ctmpsm -updatefolder `ctmpsm -listall ALLFIELDS_FULL | awk '{if($2 == "FOLDER_1" || $2 == "FOLDER_2" || $2 ==  "FOLDER_3") print $2}'` HOLD

ctmordck SYSTEM SYSTEM ~<controlmOwner>/ctm_server/user_a/udlist.txt

ctmcreate -input_file <fileName>

ctmcreate -what COMMAND -jobname servertest -cmdline "ctmvar -action set -var '%%#\DELETEME' -varexpr to_be_deleted"

ctmpwd -action add -user user2 -password 123456 -agent Default
ctmpwd -action add -user saturn_user2 -password 123456 -agent Saturn


root@vg002bss:/emuser/ctm_em# find . -name 'Defaults.rsc'
./etc/resource/Defaults.rsc
./etc/site/resource/Defaults.rsc
root@vg002bss:/emuser/ctm_em# pwd


Defaults.rsc file
AddJobsChunkSize 
find . -name 'Defaults.rsc' 


For UNIX:
emdef loopdetecttool [-U <user> [-P <password>] | -pf <password file>] -s <GUI Server Name> -arg <arg file name> -out <out file name>
 For Windows:
emdef loopdetecttool [-U <user> [-P <password>] | -pf <password

emdef defjob [-u <user> [-p <password>] | -pf <password file>]
-s <GUI Server Name> -src <XML file name> [/a]
 emdef defjob [-USERNAME <user> [-PASSWORD <password>] | -PASSWORD_FILE <password file>] -HOST <GUI Server Name> -SRC_FILE <XML file name> [/a]

SHOUT WHEN="EXECTIME" DEST="workstation1" URGENCY="R" MESSAGE="Jobcompleted OK." TIME="1015"

ON STMT="CODE" CODE="rt5" AND_OR="AND"><ON
DOSHOUT DEST="Wkstn2" URGENCY="R" MESSAGE="Job5 completed OK"
DOMAIL URGENCY="R" DEST="emuser@emuser.com" CC_DEST="barry@emuser.com" SUBJECT="OK" MESSAGE="Task completed OK."

emdef exportdefservice [-u <user> [-p <password>] | -pf <password File>] -s <GUI Server Name> -arg <args file name> -out <file name>
emdef exportdefservice [-USERNAME <user> [-PASSWORD <password>] | -PASSWORD_FILE <password file>] -HOST

ctmcreate -input_file <fullPathFileName>
input_file ~<controlm_owner>/ctm_server/data/ctmcreate_parms.txt

ctmcreate -what FOLDER -FOLDER myfolder
ctmcreate -what SUBFOLDER -FOLDER myfolder/mysubfolder

ctmdefine -what job -jobname sap1 -MEMNAME test -memlib sap -VARIABLE %%SAPR3-JOB_MODE CREATE -VARIABLE %%SAPR3-ACCOUNT DV2 -VARIABLE %%SAPR3-STEP-S01-PROGRAM ZQA_SIMPLE -owner sapr3 -VARIABLE %%SAPR3-STEP-S01-STEP_TYPE A -APPLTYPE SAP -hostgrp nord -VARIABLE %%SAPR3-JOBNAME sap1 -folder SAP1 -application SAP1 -group SAP1

To export all job processing definitions from SMART Folder PROD to file tabprod, specify the following command:
ctmexdef -FILE /tmp/tabprod -FOLDER PROD -JOBNAME "*"

ctmorder <SMART Folder name> <jobName> <odate>\ [{order|force}]
ctmorder -FOLDER ACCT100 -NAME "ga*" \ -ODATE 20100315 -FORCE y

ctmexdef
-FOLDER <name>
-JOBNAME|-MEMNAME <name>
[ -ACTION <DEFINE|CREATE> ]
[ -FILE <filename> ]
[ -WORKING_DIR <working directory> ]

Lists dependent jobs with IN conditions that are created by the job whose order ID is specified in this command.
ctmpsm -CHILD <order_ID> [<what>]

ctmpsm -LISTALL [{ODAT|TIME|APPLICATION|MEMNAME|ALL|ALLFIELDS}] [-SORT {ORDERID|JOBNAME}]

ctmpsm -LISTJOB {OK|NOTOK|EXECUTING|CYCLIC| WAITTIME|WAITCONFIRM} [-SORT {ORDERID|JOBNAME}]

ctmpsm -LISTSUB_APPLICATION <application> <sub_application>> [<scheduling date>]

ctmpsm -SCHEDTAB {-LISTFOLDER <folderName>|-UPDATE <rowNumber> <udailyName>| -ADD <folderName> <udailyName>|-DUDAILY <rowNumber>| -REMOVE <folderName>|-LISTJOBS <rowNumber>}

ctmpsm -LISTOUTPUT <orderID> [OUTPUTNUMBER {<number>|ALL}]

ctmpsm -LISTAJFTAB <folderName>

ctmpsm -LISTCAL [<calName>][<calYear>]

ctmpsm -IMPORT_CAL <Control-M/EMexportedFileName> [overwrite]

ctmpsm -XML [{ODAT|TIME|APPLICATION|MEMNAME|ALL|ALLFIELDS}] [-SORT <ORDERID|JOBNAME>]

GLCTRLM1
s-glcontrolm01p

GUI - V9
s-glentmanv9p

!01DCCGlobal

................................................................................................................................................................................................................................................................................................................................................................................................................................................

<DEFJOB>
<JOB>
FOLDER_NAME="Tbl1"
FOLDER_DSN="2232"
JOBNAME="Job1"
FILE_NAME="Job1"
FILE_NAME="Job1"
SUBAPPLICATION="ACCT"
APPLICATION="App3"
DATACENTER="CTMNYC"
TASKTYPE="Command"
FOLDER_ORDER_ METHOD=""
FILE_PATH="JobLib1"
RUN_AS="Brad"
CREATED_BY="CTMEMUSER"
TIMEFROM="1210"
TIMETO="1310"
MAXRERUN="1"
INTERVAL="1"
PRIORITY="1"
CRITICAL="1"
CYCLIC="1"
CONFIRM="1"
DAYS="1,2,3"
DAYSCAL="Thurs">
<INCOND NAME="Cond1"/>
<OUTCOND NAME="Cond5"/>
<VARIABLE EXP="%%def=123"/>
<QUANTITATIVE NAME=""/>
<SHOUT WHEN="OK" DEST="COMP554" MESSAGE="Job done." TIME="14:30"/>
<STEP_RANGE NAME="" FPGMS="1" FPROCS="1" TPGMS="1" TPROCS="1"/>
<ON PGMS="" PROCS="" CODE="">
<DO ACTION="OK"/>
<DO ACTION="OK"/>
<DOVARIABLE EXP="%%def=123"/>
<DOSHOUT DEST="" MESSAGE=""/>
<DOFORCEJOB DSN="" FOLDER_NAME="Tbl1" NAME="Job4"/>
<DOCTBRULE NAME="DOCT"/>
<DOOUTPUT OPTION="Release"/>
<DOIFRERUN FPGMS="1" FPROCS="1" TPGMS="1" TPROCS="1"/>
<DOCOND NAME="COND4"/>
<DOMAIL DEST="COMP667" MESSAGE="Job done."/>
</ON>
</JOB>
</DEFJOB>


................................................................................................................................................
................................................................................................................................................................................................................................................................................................


ctmcreate
-TASKTYPE <JOB|EXTERNAL|DETACHED|COMMAND|DUMMY|FOLDER|SUBFOLDER>
[ -SUB_APPLICATION <sub_application name> ]
[ -APPLICATION <applic name> ]
[ -DEBUG <debug level 0-5> ]
[ -QUIET ]
[ -FOLDER_ORD <Active or Sub folder orderno|ALONE|LAST> ]
[ -ADJUST_COND Y|N ]
[ -MULTIAGENT Y|N ]
[ -HOSTGRP <name> ]
[ -MEMLIB <path> ]
[ -MEMNAME <filename> ]
[ -CMDLINE <string> ]
[ -EMBEDDED_SCRIPT <file name> ]
[ -JOBNAME <name> ]
[ -FOLDER <name> ]
[ -RUN_AS <username> ]
[ -CREATED_BY <username> ]
[ -ODATE <date>|ODAT ]
[ -ODATE_OPTION VALUE_DATE|RUN_DATE ]
[ -MAXRERUN <value> ]
[ -TIMEZONE <xxx> ]
[ -TIMEFROM <earliest submission time> ]
[ -TIMEUNTIL <latest submission time> | '>' ]
[ -PRIORITY <job priority> ]
[ -CRITICAL Y|N ]
[ -CYCLIC Y|N ]
[ -CYCLIC_TYPE INTERVAL|INTERVAL_SEQUENCE|SPECIFIC_TIMES ]
[ -SPECIFIC_TIMES <specific times string (HHMM,HHMM)> ]
[ -INTERVAL_SEQUENCE <interval sequence string e.g(+1H,+2M)> ]
[ -TOLERANCE <maximum delay allowed (minutes)> ]
[ -CONFIRM Y|N ]
[ -APPLTYPE <agent_application> ]
[ -APPLVER <application version> ]
[ -CMVER <CM version> ]
[ -APPLFORM <application form> ]
[ -INTERVAL <45d(days) | 1080h(hours) | 64800m (minutes)> ]
[ -INTERVALFROM START | END | TARGET ]
[ -OVERRIDE_PATH <alternative directory> ]
[ -MAXWAIT <days> ]
[ -DESCRIPTION <string> ]
[ -DOCMEM <filename> ]
[ -DOCLIB <directory name> ]
[ -INCOND <condition> <dateref>|ODAT AND|OR ]
[ -OUTCOND <condition> <dateref>|ODAT ADD|DEL ]
[ -VARIABLE <varname> <expression> ]
[ -QUANTITATIVE <name> <quantity> ]
[ -OUTPUT RELEASE|DELETE|COPY|MOVE [<parameter>]]
[ -Control <name> E|S ]
[ -SHOUT OK|NOTOK|RERUN|LATESUB|LATETIME|EXECTIME <destination> <urgency R|U|V> <message> [<time>]]
[ -ON <statement> <code> 
[ -DOOK ]
[ -DONOTOK ]
[ -DORERUN ]
[ -DOSHOUT <destination> <urgency R|U|V> <message> ]
[ -DOCOND <condname> <dateref>|ODAT ADD|DEL ]
[ -DOVARIABLE <varname> <expression> ]
[ -DOFORCEJOB <foldername> <jobname> <odate>|ODAT ]
[ -DOOUTPUT RELEASE|DELETE|COPY|MOVE [<parameter>] ] ]
[ -DOSTOPCYCLIC ]
[ -DOMAIL <destination> <cc> <urgency R|U|V> <subject> <message> [<attach output>] ]
[ -DOREMEDY <summary> <description> <urgency L|M|H|U|C>

................................................................................................................................................................................................................................................................................................................................................................................................................................................

ctmcreate -what command -group em\ -application test -cmdline "ls -l /etc/passwd"
You can get the same result by using the -input_file parameter as follows:
ctmcreate -input_file ~<controlm_owner>/ctm_server/data/ctmcreate_delfr.txt

The referenced file contains the following lines:

-tasktype command
-subapp em
-application test
-cmdline "ls -l /etc/passwd"

................................................................................................................................................................................................................................................................................................................................................................................................................................................

The following command includes examples of most of the parameters that can be used to create a job in the Active Jobs database:
ctmcreate -what JOB \
-cyclic N \
-description "Daily Summary" \
-subapp SUPPLY -application SUPPLIES \
-file_path /users/ctm_server/ -file_name PROLYPAR -hostgrp UNIXGRP \
-jobname PROLYPAR \
-run_as suppman \
-odate 19981130 \
-timeuntil 1800 \
-priority AA -critical N \
-confirm Y \
-doclib /users/supply/doc/ -docmem prolypardoc \
-incond pk_oly_ok ODAT AND \
-incond pk_olp_ok ODAT AND \
-outcond pk_oly_ok ODAT DEL \
-outcond pk_olp_ok ODAT DEL \
-outcond pk_olypar ODAT ADD \
-variable %%PARM1 "%%CALCDATE %%ODATE -2" \
-quantitative tape 2 -quantitative cpu 50 \
-output MOVE /test/logs/ \
-control disk2 E \
-shout OK oper2 U "Daily summary completed" \
-on "COPY JWINFO_2507" "%COPY-E-OPENIN, error" \
-dooutput MOVE /oper/openerr

................................................................................................................................................................................................................................................................................................................................................................................................................................................

ctmdefine
-FOLDER <name>
-JOBNAME <name>
-WHAT <JOB|EXTERNAL|DETACHED|COMMAND|DUMMY>
-SUB_APPLICATION <sub_application name>
-APPLICATION <applic name>
[ -CMDLINE <string> ]
[ -EMBEDDED_SCRIPT <file name> ]
[ -MAXRERUN <value> ]
[ -CRITICAL Y|N ]
[ -CYCLIC Y|N ]
[ -CYCLIC_TYPE INTERVAL|INTERVAL_SEQUENCE|SPECIFIC_TIMES ]
[ -INTERVAL <45d(days) | 1080h(hours) | 64800m (minutes)> ]
[ -SPECIFIC_TIMES <specific times string (HHMM,HHMM)> ]
[ -INTERVAL_SEQUENCE <interval sequence string e.g(+1H,+2M)> ]
[ -TOLERANCE <maximum delay allowed (minutes)> ]
[ -INTERVALFROM START | END | TARGET ]
[ -OVERRIDE_PATH <alternative directory> ]
[ -RELATIONSHIP AND|OR ]
[ -MAXWAIT <days> ]
[ -HOSTGRP <name> ]
[ -MEMLIB <path> ]
[ -MEMNAME <filename> ]
[ -MULTIAGENT Y|N ]
[ -ADJUST_COND Y|N ]
[ -RUN_AS <username> ]
[ -CREATED BY <username> ]
[ -DEBUG <debug level 0-5> ]
[ -QUIET ]
[ -TIMEZONE <xxx> ]
[ -TIMEFROM <earliest submission time> ]
[ -TIMEUNTIL <latest submission time> | '>' ]
[ -PRIORITY <job priority> ]
[ -CONFIRM Y|N ]
[ -APPLTYPE <agent_application> ]
[ -APPLVER <application version> ]
[ -CMVER <CM version> ]
[ -APPLFORM <application form> ]
[ -DESCRIPTION <string> ]
[ -DOCMEM <filename> ]
[ -DOCLIB <directory name> ]
[ -INCOND <condition> <dateref>|ODAT AND|OR ]
[ -OUTCOND <condition> <dateref>|ODAT ADD|DEL ]
[ -VARIABLE <varname> <expression> ]
[ -QUANTITATIVE <name> <quantity> ]
[ -OUTPUT RELEASE|DELETE|COPY|MOVE [<parameter>]]
[ -CONTROL <name> E|S ]
[ -SHOUT OK|NOTOK|RERUN|LATESUB|LATETIME|EXECTIME <destination> <urgency R|U|V> <message> [<time>] ]
[ -ON <statement> <code>
[ -DOOK ]
[ -DONOTOK ]
[ -DORERUN ]
[ -DOOUTPUT RELEASE|DELETE|COPY|MOVE [<parameter>] ] ]
[ -DOSTOPCYCLIC ]
[ -DOSHOUT <destination> <urgency R|U|V> <message> ]
[ -DOCOND <condname> <dateref>|ODAT ADD|DEL ]
[ -DOVARIABLE <varname> <expression> ]
[ -DOFORCEJOB <foldername> <jobname> <odate>|ODAT ]
[ -DOMAIL <destination> <cc> <urgency R|U|V> <subject> <message> [<attach output>] ]
[ -DOREMEDY <summary> <description> <urgency L|M|H|U|C> ]
[ -DAYS <daystr> ]
[ -WEEKDAYS <weekdaystr> ]
[ -MONTH ALL|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC Y|N ]
[ -DATE <MMDD> ]
[ -DATEFROM <YYYYMMDD> ]
[ -DATEUNTIL <YYYYMMDD> ]
[ -DAYSCAL <calendar> ]
[ -WEEKCAL <calendar> ]
[ -CAL_ANDOR AND|OR ]
[ -SHIFT [</>/@][+/-]nn ]
[ -CONFCAL <calendar> ]
[ -RETRO Y|N ]
[ -RBC <rule_based_calendar> ]

................................................................................................................................................................................................................................................................................................................................................................................................................................................

The following command contains the minimum parameters required to define a job:
ctmdefine -folder cmmnds -jobname cmls13 \
-what command -group em -application test \
-date 0101 -cmdline "ls -l /etc/passwd"
You can get the same result by using the -input_file parameter as follows:
ctmdefine -input_file ~<controlm_owner>/ctm_server/data/ctmdefine_cmmnds.txt
The referenced file (ctmdefine_cmmnds.txt) contains the following lines:
-folder cmmnds
-jobname cmls13
-tasktype command
-group em
-application test
-date 0101
-cmdline "ls -l \etc\passwd"

